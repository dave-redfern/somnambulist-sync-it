#!/usr/bin/env php
<?php

declare(strict_types=1);
set_time_limit(0);

function includeIfExists($file)
{
    if (file_exists($file)) {
        return include $file;
    }
}

if ((!$loader = includeIfExists(__DIR__.'/../vendor/autoload.php')) && (!$loader = includeIfExists(__DIR__.'/../../../autoload.php'))) {
    die(
        'You must set up the project dependencies, run the following commands:'.PHP_EOL.
        'curl -s http://getcomposer.org/installer | php'.PHP_EOL.
        'php composer.phar install'.PHP_EOL
    );
}

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Formatter\OutputFormatterStyle;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;
use Symfony\Component\Dotenv\Dotenv;
use SyncIt\Commands;

$env = getcwd() . '/.env';
if (file_exists($env)) {
    (new Dotenv())->loadEnv($env);
}

$input  = new ArgvInput();
$output = new ConsoleOutput();
$output->getFormatter()->setStyle('ok', new OutputFormatterStyle('white', 'green', ['bold']));
$output->getFormatter()->setStyle('err', new OutputFormatterStyle('white', 'red', ['bold']));
$output->getFormatter()->setStyle('step', new OutputFormatterStyle('white', 'blue', ['bold']));
$output->getFormatter()->setStyle('q', new OutputFormatterStyle('white', 'cyan', ['bold']));
$output->getFormatter()->setStyle('warn', new OutputFormatterStyle('white', 'yellow', ['bold']));
$output->getFormatter()->setStyle('i', new OutputFormatterStyle('white', 'magenta', ['bold']));

$app = new Application('Sync-It with Mutagen', '1.0.0');
$commands = [
    new Commands\EnvParametersCommand(),
    new Commands\InitCommand(),
    new Commands\MonitorCommand(),
    new Commands\StatusCommand(),
    new Commands\StartCommand(),
    new Commands\StopCommand(),
    new Commands\ViewCommand(),
    new Commands\DebugCommand(),
];
foreach ($commands as $command) {
    $command->setupConsoleHelper($input, $output);

    $app->add($command);
}
$app->run($input, $output);
